아래의 조건을 모두 적용하여, 아래의 요구사항을 모두 구현할 것.
구현 결과를 체크리스트로 반환할 것.

==============================================

조건-커서룰) 아래의 커서룰을 적용하여 작업하고, 이 작업이 끝나면 해당 rules 적용 결과를 체크리스트로 반환할 것.
            - @01-common.mdc
            - @02-wireframe.mdc
            - @03-ui.mdc

==============================================

조건-피그마) 활용할MCP: CursorTalkToFigmaMCP(채널명: 0sulvl3w)
조건-피그마) 구현될 컴포넌트 노드ID(search 영역): 3:1559

조건-파일경로) 구현될 TSX 파일경로: src/components/diaries/index.tsx
조건-파일경로) 구현될 CSS 파일경로: src/components/diaries/styles.module.css

==============================================

조건-공통목록) 사용할 공통컴포넌트 목록
            - <SelectBox />, <Searchbar />, <Button />

조건-공통목록) 사용할 색상 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

조건-공통목록) 사용할 타이포그래피 목록(global.css에 명시된 변수 토큰 활용)
            - 비슷한 토큰 선택하여 사용(하드코딩 금지)

==============================================

기존히스토리-참고만) MCP를 연동하여 치그마의 디자인을 이미 만들어져있는 와이어프레임의 search 영역에 그대로 구현할 것.

기존히스토리-참고만) 공통컴포넌트는 다음의 규칙을 지켜 step-by-step 으로 구현하고, 적용 결과를 체크리스트로 반환할 것.
            1. 공통컴포넌트 원본을 수정하지 말고, 아래의 props만 활용할 것.
                - variant: primary, secondary를 확인하여 구현할 것.
                - theme: light 모드만 사용할 것.
                - size: 피그마와 일치할 것.
                - className 전달: width만 허용할 것.

            2. 적용될 공통컴포넌트 목록을 구현할 것.
                - 필터선택박스: <SelectBox />
                - 검색바: <Searchbar />
                - 일기쓰기: <Button />


기존히스토리-참고만) 필터선택박스는 "secondary"가 아닌, "primary"를 사용할 것.

기존히스토리-참고만) "search"영역 중, "필터선택박스"와 "검색바"는 하나의 div로 묶고, "일기쓰기"는 개별로 둬서 두개를 "search 영역 양 끝으로 배열할 것.
          - 노드ID: 3:1559

기존히스토리-참고만) "일기쓰기" 버튼에는 "+"아이콘 버튼이 있는데, "public/icons/plus_outline_light_m.svg"에 있는 아이콘을 사용할 것.

==============================================

핵심요구사항) "일기쓰기" 버튼이 "search" layout에 비해 너무 큼 크기를 줄일 것. (middle size 추천)